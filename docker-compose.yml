version: '3'
services:
  snort:
    image: vimagick/snort #image docker officiel de snort
    container_name: snort #nom du conteneur
    cap_add:
      - NET_ADMIN #permet de capturer et analysele trafic
      - NET_RAW
    volumes:
      - ./snort/rules:/etc/snort/rules/custom.rules #fichier de règles personnalisées
      - ./snort/logs:/var/log/snort #enregiste les logs générés par snort
      - ./snort/snort.conf:/etc/snort/snort.conf #fichier de configuration principal de snort
    network_mode: host #utilise le réseau hôte pour capturer le trafic
    command: /usr/local/bin/snort -c /etc/snort/snort.conf -i any
    environment:
      - INTERFACE=any #l'interface réseau à surveiller

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml #Monte le fichier de configuration Prometheus local dans le conteneur.
    ports:
      - "9090:9090" #port pour accéder à Prometheus
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000" #port permetant d'accèder à Grafana
    volumes:
      - grafana-data:/var/lib/grafana #monte un volume pour concerver les données de Grafana (persite même après l'arrêt du conteneur)
    environment: #définit le nom du user et le password pour accèder a grafana
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
    restart: unless-stopped

volumes:
  grafana-data: #cree un volume nommé grafana-data pour stocker les données persistantes de Grafana
